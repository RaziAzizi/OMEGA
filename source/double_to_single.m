function options = double_to_single(options)
%DOUBLE_TO_SINGLE Convert all necessary values in options to single
%precision
options.x0 = single(options.x0(:));
options.Ndx = uint32(options.Ndx);
options.Ndy = uint32(options.Ndy);
options.Ndz = uint32(options.Ndz);
options.h = single(options.h);
options.U = single(options.U);
options.mlem = logical(options.mlem);
options.osem = logical(options.osem);
options.mramla = logical(options.mramla);
options.ramla = logical(options.ramla);
options.rosem = logical(options.rosem);
options.rbi = logical(options.rbi);
options.drama = logical(options.drama);
options.cosem = logical(options.cosem);
options.ecosem = logical(options.ecosem);
options.acosem = logical(options.acosem);
options.OSL_MLEM = logical(options.OSL_MLEM);
options.OSL_OSEM = logical(options.OSL_OSEM);
options.MBSREM = logical(options.MBSREM);
options.BSREM = logical(options.BSREM);
options.ROSEM_MAP = logical(options.ROSEM_MAP);
options.RBI_MAP = logical(options.RBI_MAP);
options.MRP = logical(options.MRP);
options.quad = logical(options.quad);
options.L = logical(options.L);
options.FMH = logical(options.FMH);
options.weighted_mean = logical(options.weighted_mean);
options.TV = logical(options.TV);
options.AD = logical(options.AD);
options.APLS = logical(options.APLS);
options.TGV = logical(options.TGV);
options.COSEM_MAP = uint32(options.COSEM_MAP);
options.mean_type = int32(options.mean_type);
options.beta_mrp_osem = single(options.beta_mrp_osem);
options.beta_mrp_bsrem = single(options.beta_mrp_bsrem);
options.beta_L_osem = single(options.beta_L_osem);
options.beta_L_bsrem = single(options.beta_L_bsrem);
options.beta_quad_osem = single(options.beta_quad_osem);
options.beta_quad_bsrem = single(options.beta_quad_bsrem);
options.beta_fmh_osem = single(options.beta_fmh_osem);
options.beta_weighted_osem = single(options.beta_weighted_osem);
options.beta_TV_osem = single(options.beta_TV_osem);
options.beta_TGV_osem = single(options.beta_TGV_osem);
options.beta_fmh_bsrem = single(options.beta_fmh_bsrem);
options.beta_weighted_bsrem = single(options.beta_weighted_bsrem);
options.beta_TV_bsrem = single(options.beta_TV_bsrem);
options.beta_TGV_bsrem = single(options.beta_TGV_bsrem);
options.beta_ad_osem = single(options.beta_ad_osem);
options.beta_ad_bsrem = single(options.beta_ad_bsrem);
options.beta_APLS_osem = single(options.beta_APLS_osem);
options.beta_APLS_bsrem = single(options.beta_APLS_bsrem);
options.beta_mrp_mbsrem = single(options.beta_mrp_mbsrem);
options.beta_L_mbsrem = single(options.beta_L_mbsrem);
options.beta_quad_mbsrem = single(options.beta_quad_mbsrem);
options.beta_fmh_mbsrem = single(options.beta_fmh_mbsrem);
options.beta_weighted_mbsrem = single(options.beta_weighted_mbsrem);
options.beta_TV_mbsrem = single(options.beta_TV_mbsrem);
options.beta_ad_mbsrem = single(options.beta_ad_mbsrem);
options.beta_APLS_mbsrem = single(options.beta_APLS_mbsrem);
options.beta_TGV_mbsrem = single(options.beta_TGV_mbsrem);
options.beta_mrp_rosem = single(options.beta_mrp_rosem);
options.beta_L_rosem = single(options.beta_L_rosem);
options.beta_quad_rosem = single(options.beta_quad_rosem);
options.beta_fmh_rosem = single(options.beta_fmh_rosem);
options.beta_weighted_rosem = single(options.beta_weighted_rosem);
options.beta_TV_rosem = single(options.beta_TV_rosem);
options.beta_ad_rosem = single(options.beta_ad_rosem);
options.beta_APLS_rosem = single(options.beta_APLS_rosem);
options.beta_TGV_rosem = single(options.beta_TGV_rosem);
options.beta_mrp_rbi = single(options.beta_mrp_rbi);
options.beta_L_rbi = single(options.beta_L_rbi);
options.beta_quad_rbi = single(options.beta_quad_rbi);
options.beta_fmh_rbi = single(options.beta_fmh_rbi);
options.beta_weighted_rbi = single(options.beta_weighted_rbi);
options.beta_TV_rbi = single(options.beta_TV_rbi);
options.beta_ad_rbi = single(options.beta_ad_rbi);
options.beta_APLS_rbi = single(options.beta_APLS_rbi);
options.beta_TGV_rbi = single(options.beta_TGV_rbi);
options.beta_mrp_cosem = single(options.beta_mrp_cosem);
options.beta_L_cosem = single(options.beta_L_cosem);
options.beta_quad_cosem = single(options.beta_quad_cosem);
options.beta_fmh_cosem = single(options.beta_fmh_cosem);
options.beta_weighted_cosem = single(options.beta_weighted_cosem);
options.beta_TV_cosem = single(options.beta_TV_cosem);
options.beta_ad_cosem = single(options.beta_ad_cosem);
options.beta_APLS_cosem = single(options.beta_APLS_cosem);
options.beta_TGV_cosem = single(options.beta_TGV_cosem);
options.beta_mrp_mlem = single(options.beta_mrp_mlem);
options.beta_L_mlem = single(options.beta_L_mlem);
options.beta_quad_mlem = single(options.beta_quad_mlem);
options.beta_fmh_mlem = single(options.beta_fmh_mlem);
options.beta_weighted_mlem = single(options.beta_weighted_mlem);
options.beta_TV_mlem = single(options.beta_TV_mlem);
options.beta_ad_mlem = single(options.beta_ad_mlem);
options.beta_APLS_mlem = single(options.beta_APLS_mlem);
options.beta_TGV_mlem = single(options.beta_TGV_mlem);
end

