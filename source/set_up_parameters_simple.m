function options = set_up_parameters_simple(options)
%set_up_parameters_simple Set up missing parameters to simple
%reconstruction
if ~isfield(options, 'cryst_per_block_axial')
    options.cryst_per_block_axial = options.cryst_per_block;
end
if ~isfield(options, 'transaxial_multip')
    options.transaxial_multip = 1;
end
options.pseudot = [];
options.det_per_ring = options.blocks_per_ring*options.cryst_per_block * options.transaxial_multip;
options.det_w_pseudo = options.blocks_per_ring*(options.cryst_per_block) * options.transaxial_multip;
options.rings = options.linear_multip * options.cryst_per_block_axial;
options.detectors = options.det_per_ring*options.rings;
options.sampling_raw = 1;
options.segment_table = [options.Nz, options.Nz - (options.span + 1):-options.span*2:max(options.Nz - options.ring_difference*2, options.rings - options.ring_difference)];
if exist('OCTAVE_VERSION','builtin') == 0 && verLessThan('matlab','8.5')
    options.segment_table = [options.segment_table(1), repeat_elem(options.segment_table(2:end),2,1)];
else
    options.segment_table = [options.segment_table(1), repelem(options.segment_table(2:end),2)];
end
options.TotSinos = sum(options.segment_table);
options.time_index = 0;
options.NSinos = options.TotSinos;
options.ndist_side = -1;
options.sampling = 1;
options.TOF_bins = 1;
options.TOF_width = 0;
options.TOF_offset = 0;
options.TOF_noise_FWHM = 0;
options.TOF_FWHM = 0;
options.use_machine = 0;
options.TOF_bins_used = options.TOF_bins;
options.fill_sinogram_gaps = false;
options.gap_filling_method = 'fillmissing';
options.interpolation_method_fillmissing = 'linear';
options.interpolation_method_inpaint = 0;
options.use_raw_data = false;
options.store_raw_data = false;
options.randoms_correction = false;
options.variance_reduction = false;
options.randoms_smoothing = false;
options.scatter_correction = false;
options.normalize_scatter = false;
options.scatter_smoothing = false;
options.subtract_scatter = true;
options.global_correction_factor = 1;
options.attenuation_correction = false;
options.attenuation_datafile = '';
options.compute_normalization = false;
options.normalization_options = [1 1 1 0];
options.normalization_phantom_radius = inf;
options.normalization_scatter_correction = false;
options.normalization_correction = false;
options.use_user_normalization = false;
options.arc_correction = false;
options.corrections_during_reconstruction = false;
options.tot_time = inf;
options.partitions = 1;
options.start = 0;
options.end = options.tot_time;
options.dx = options.FOVa_x / options.Nx;
options.dy = options.FOVa_y / options.Ny;
options.dz = options.axial_fov / options.Nz;
options.precompute_obs_matrix = false;
options.precompute_lor = false;
options.precompute_all = false;
options.implementation = 4;
options.use_device = 0;
options.use_64bit_atomics = false;
options.force_build = false;
options.use_CUDA = false;
options.cpu_to_gpu_factor = 0;
options.projector_type = 1;
options.deblurring = false;
options.deblur_iterations = 0;
options.tube_width_xy = options.cr_p;
options.tube_width_z = 0;
options.tube_radius = sqrt(2) * (options.cr_pz / 2);
options.voxel_radius = 1;
options.n_rays_transaxial = 1;
options.n_rays_axial = 1;
options.apply_acceleration = false;
options.save_iter = false;
options.subset_type = 1;
options.n_angles = 2;
options.x0 = ones(options.Nx, options.Ny, options.Nz);
options.epps = 1e-8;
options.use_Shuffle = false;
options.use_fsparse = false;
options.med_no_norm = false;
options.MLEM = false;
options.OSEM = true;
options.MRAMLA = false;
options.RAMLA = false;
options.ROSEM = false;
options.RBI = false;
options.DRAMA = false;
options.COSEM = false;
options.ECOSEM = false;
options.ACOSEM = false;
options.OSL_MLEM = false;
options.OSL_OSEM = false;
options.MBSREM = false;
options.BSREM = false;
options.ROSEM_MAP = false;
options.OSL_RBI = false;
options.OSL_COSEM = false;
options.MRP = false;
options.quad = false;
options.Huber = false;
options.L = false;
options.FMH = false;
options.weighted_mean = false;
options.TV = false;
options.AD = false;
options.APLS = false;
options.TGV = false;
options.NLM = false;
options.h = 2;
options.lambda0_MBSREM = 0.2;
options.U = 0;
options.lambda0 = 0.2;
options.lambda0_ROSEM_MAP = 1;
options.beta0_drama = 0.1;
options.beta_drama = 1;
options.alpha_drama = 0.1;
options.Ndx = 1;
options.Ndy = 1;
options.Ndz = 1;
options.beta_MRP_OSL_OSEM = 0.1;
options.beta_MRP_OSL_MLEM = 1.5;
options.beta_MRP_MBSREM = 0.3;
options.beta_MRP_BSREM = 0.1;
options.beta_MRP_ROSEM_MAP = 2;
options.beta_MRP_OSL_RBI = 0.1;
options.beta_MRP_OSL_COSEM = 1;
options.beta_quad_OSL_OSEM = 0.01;
options.beta_quad_OSL_MLEM = 0.1;
options.beta_quad_MBSREM = 0.05;
options.beta_quad_BSREM = 0.03;
options.beta_quad_ROSEM_MAP = 0.1;
options.beta_quad_OSL_RBI = 0.05;
options.beta_quad_OSL_COSEM = 0.01;
options.weights = [];
options.beta_Huber_OSL_OSEM = 0.01;
options.beta_Huber_OSL_MLEM = 0.1;
options.beta_Huber_MBSREM = 0.05;
options.beta_Huber_BSREM = 0.03;
options.beta_Huber_ROSEM_MAP = 0.1;
options.beta_Huber_OSL_RBI = 0.05;
options.beta_Huber_OSL_COSEM = 0.01;
options.huber_delta = 5;
options.weights_huber = [];
options.beta_L_OSL_OSEM = 0.1;
options.beta_L_OSL_MLEM = 0.1;
options.beta_L_MBSREM = 0.1;
options.beta_L_BSREM = 0.03;
options.beta_L_ROSEM_MAP = 3;
options.beta_L_OSL_RBI = 0.09;
options.beta_L_OSL_COSEM = 0.1;
options.a_L = [];
options.oneD_weights = false;
options.beta_FMH_OSL_OSEM = 0.1;
options.beta_FMH_OSL_MLEM = 0.1;
options.beta_FMH_MBSREM = 0.6;
options.beta_FMH_BSREM = 5;
options.beta_FMH_ROSEM_MAP = 8;
options.beta_FMH_OSL_RBI = 0.5;
options.beta_FMH_OSL_COSEM = 0.1;
options.fmh_weights = [];
options.fmh_center_weight = 4;
options.mean_type = 1;
options.beta_weighted_mean_OSL_OSEM = 0.02;
options.beta_weighted_mean_OSL_MLEM = 0.1;
options.beta_weighted_mean_MBSREM = 0.1;
options.beta_weighted_mean_BSREM = 5;
options.beta_weighted_mean_ROSEM_MAP = 3;
options.beta_weighted_mean_OSL_RBI = 0.04;
options.beta_weighted_mean_OSL_COSEM = 0.2;
options.weighted_weights = [];
options.weighted_center_weight = 4;
options.beta_TV_OSL_OSEM = 0.03;
options.beta_TV_OSL_MLEM = 0.1;
options.beta_TV_MBSREM = 0.01;
options.beta_TV_BSREM = 0.05;
options.beta_TV_ROSEM_MAP = 0.07;
options.beta_TV_OSL_RBI = 0.002;
options.beta_TV_OSL_COSEM = 0.003;
options.TVsmoothing = 1e-1;
options.TV_use_anatomical = false;
options.TVtype = 3;
options.TV_reference_image = '';
options.T = 0.1;
options.C = 1;
options.tau = 1e-8;
options.beta_AD_OSL_OSEM = 0.1;
options.beta_AD_OSL_MLEM = 0.1;
options.beta_AD_MBSREM = 0.3;
options.beta_AD_BSREM = 0.2;
options.beta_AD_ROSEM_MAP = 0.0003;
options.beta_AD_OSL_RBI = 0.05;
options.beta_AD_OSL_COSEM = 0.1;
options.TimeStepAD = 0.0625;
options.KAD = 2;
options.NiterAD = 1;
options.FluxType = 1;
options.DiffusionType = 1;
options.beta_APLS_OSL_OSEM = 0.01;
options.beta_APLS_OSL_MLEM = 0.1;
options.beta_APLS_MBSREM = 0.1;
options.beta_APLS_BSREM = 0.005;
options.beta_APLS_ROSEM_MAP = 0.1;
options.beta_APLS_OSL_RBI = 0.1;
options.beta_APLS_OSL_COSEM = 0.01;
options.eta = 1e-5;
options.APLSsmoothing = 1e-5;
options.APLS_reference_image = '';
options.beta_TGV_OSL_OSEM = 0.05;
options.beta_TGV_OSL_MLEM = 0.1;
options.beta_TGV_MBSREM = 0.1;
options.beta_TGV_BSREM = 1;
options.beta_TGV_ROSEM_MAP = 0.25;
options.beta_TGV_OSL_RBI = 0.1;
options.beta_TGV_OSL_COSEM = 0.05;
options.alphaTGV = 2;
options.betaTGV = 1;
options.NiterTGV = 30;
options.beta_NLM_OSL_OSEM = 0.025;
options.beta_NLM_OSL_MLEM = 0.1;
options.beta_NLM_MBSREM = 0.05;
options.beta_NLM_BSREM = 0.01;
options.beta_NLM_ROSEM_MAP = 0.1;
options.beta_NLM_OSL_RBI = 0.01;
options.beta_NLM_OSL_COSEM = 0.01;
options.sigma = 0.01;
options.Nlx = 1;
options.Nly = 1;
options.Nlz = 0;
options.NLM_use_anatomical = false;
options.NLM_reference_image = '';
options.NLM_MRP = false;
options.simple = true;
end

