function [Summ,rhs] = computeImplementation4(options,use_raw_data,randoms_correction, pituus,osa_iter, normalization_correction,...
    Nx, Ny, Nz, dx, dy, dz, bx, by, bz, x, y, z_det, xx, yy, size_x, NSinos, NSlices, zmax, attenuation_correction, pseudot, det_per_ring, ...
    TOF, TOFSize, sigma_x, TOFCenter, dec, nCores, L_input, lor_a_input, xy_index_input, z_index_input, epps, uu, OSEM_apu, no_norm, ...
    x_center, y_center, z_center, bmin, bmax, Vmax, V, scatter_input, norm_input, SinD, dc_z, varargin)
%COMPUTEIMPLEMENTATION4 Computes the forward and backward projections for
%implementation 4
%   Utility function

if ~isfield(options,'angles')
    options.angles = 0;
end
if ~isfield(options,'dPitch')
    options.dPitch = 0;
end
if ~isfield(options,'xSize')
    options.xSize = uint32(0);
end
if ~isfield(options,'nProjections')
    options.nProjections = int64(0);
end
if ~isfield(options,'subsets')
    options.subsets = 1;
end
if ~isfield(options,'CT')
    options.CT = false;
end
if osa_iter == 0
    koko = pituus;
else
    koko = pituus(osa_iter + 1) - pituus(osa_iter);
end
if ~isempty(varargin) && ~isempty(varargin{1})
    tyyppi = varargin{1};
else
    tyyppi = false;
end
<<<<<<< Updated upstream
=======
if options.subset_type >= 8 && options.subsets > 1
    koko = koko * options.Nang * options.Ndist;
end
if isa(uu, 'double')
    uu = single(uu);
end
if isa(SinD, 'double')
    SinD = single(SinD);
end
>>>>>>> Stashed changes

if options.projector_type == 1
    if options.CT
        if exist('OCTAVE_VERSION','builtin') == 0
            [Summ, rhs] = projector_mexCT( Ny, Nx, Nz, dx, dz, by, bx, bz, z_det, x, y, dy, yy, xx , NSinos, NSlices, size_x, zmax, options.vaimennus, ...
                norm_input, SinD, koko, attenuation_correction, normalization_correction, randoms_correction,...
                options.scatter, scatter_input, options.global_correction_factor, lor_a_input, xy_index_input, z_index_input, NSinos, L_input, pseudot, det_per_ring, ...
                TOF, TOFSize, sigma_x, TOFCenter, int64(options.TOF_bins), dec, options.verbose, nCores, ...
                (use_raw_data), uint32(1), options.listmode, epps, uu, OSEM_apu, uint32(options.projector_type), no_norm, options.precompute_lor, tyyppi, ...
                options.n_rays_transaxial, options.n_rays_axial, dc_z, uint32(options.subsets), options.angles, uint32(options.xSize), options.dPitch, ...
                int64(numel(options.angles)));
        elseif exist('OCTAVE_VERSION','builtin') == 5
            [Summ, rhs] = projector_octCT( Ny, Nx, Nz, dx, dz, by, bx, bz, z_det, x, y, dy, yy, xx , NSinos, NSlices, size_x, zmax, options.vaimennus, ...
                norm_input, SinD, koko, attenuation_correction, normalization_correction, randoms_correction,...
                options.scatter, scatter_input, options.global_correction_factor, lor_a_input, xy_index_input, z_index_input, NSinos, L_input, pseudot, det_per_ring, ...
                TOF, TOFSize, sigma_x, TOFCenter, int64(options.TOF_bins), dec, options.verbose, nCores, ...
                (use_raw_data), uint32(1), options.listmode, epps, uu, OSEM_apu, uint32(options.projector_type), no_norm, options.precompute_lor, tyyppi, ...
                options.n_rays_transaxial, options.n_rays_axial, dc_z, uint32(options.subsets), options.angles, uint32(options.xSize), options.dPitch, ...
                int64(numel(options.angles)));
        end
    else
        if exist('OCTAVE_VERSION','builtin') == 0
            [Summ, rhs] = projector_mex( Ny, Nx, Nz, dx, dz, by, bx, bz, z_det, x, y, dy, yy, xx , NSinos, NSlices, size_x, zmax, options.vaimennus, ...
                norm_input, SinD, koko, attenuation_correction, normalization_correction, randoms_correction,...
                options.scatter, scatter_input, options.global_correction_factor, lor_a_input, xy_index_input, z_index_input, NSinos, L_input, pseudot, det_per_ring, ...
                TOF, TOFSize, sigma_x, TOFCenter, int64(options.TOF_bins), dec, options.verbose, nCores, ...
                (use_raw_data), uint32(1), options.listmode, epps, uu, OSEM_apu, uint32(options.projector_type), no_norm, options.precompute_lor, tyyppi, ...
                options.n_rays_transaxial, options.n_rays_axial, dc_z);
        elseif exist('OCTAVE_VERSION','builtin') == 5
            [Summ, rhs] = projector_oct( Ny, Nx, Nz, dx, dz, by, bx, bz, z_det, x, y, dy, yy, xx , NSinos, NSlices, size_x, zmax, options.vaimennus, ...
                norm_input, SinD, koko, attenuation_correction, normalization_correction, randoms_correction,...
                options.scatter, scatter_input, options.global_correction_factor, lor_a_input, xy_index_input, z_index_input, NSinos, L_input, pseudot, det_per_ring, ...
                TOF, TOFSize, sigma_x, TOFCenter, int64(options.TOF_bins), dec, options.verbose, nCores, ...
                (use_raw_data), uint32(1), options.listmode, epps, uu, OSEM_apu, uint32(options.projector_type), no_norm, options.precompute_lor, tyyppi, ...
                options.n_rays_transaxial, options.n_rays_axial, dc_z);
        end
    end
elseif options.projector_type == 2
    if options.CT
        error('Unsupported projector!')
    else
        if exist('OCTAVE_VERSION','builtin') == 0
            [Summ, rhs] = projector_mex( Ny, Nx, Nz, dx, dz, by, bx, bz, z_det, x, y, dy, yy, xx , NSinos, NSlices, size_x, zmax, options.vaimennus, ...
                norm_input, SinD, koko, attenuation_correction, normalization_correction, randoms_correction,...
                options.scatter, scatter_input, options.global_correction_factor, lor_a_input, xy_index_input, z_index_input, NSinos, L_input, pseudot, det_per_ring, ...
                TOF, TOFSize, sigma_x, TOFCenter, int64(options.TOF_bins), dec, options.verbose, nCores, ...
                (use_raw_data), uint32(1), options.listmode, epps, uu, OSEM_apu, uint32(options.projector_type), no_norm, options.precompute_lor, tyyppi, ...
                options.tube_width_xy, x_center, y_center, z_center, options.tube_width_z);
        elseif exist('OCTAVE_VERSION','builtin') == 5
            [Summ, rhs] = projector_oct( Ny, Nx, Nz, dx, dz, by, bx, bz, z_det, x, y, dy, yy, xx , NSinos, NSlices, size_x, zmax, options.vaimennus, ...
                norm_input, SinD, koko, attenuation_correction, normalization_correction, randoms_correction,...
                options.scatter, scatter_input, options.global_correction_factor, lor_a_input, xy_index_input, z_index_input, NSinos, L_input, pseudot, det_per_ring, ...
                TOF, TOFSize, sigma_x, TOFCenter, int64(options.TOF_bins), dec, options.verbose, nCores, ...
                (use_raw_data), uint32(1), options.listmode, epps, uu, OSEM_apu, uint32(options.projector_type), no_norm, options.precompute_lor, tyyppi, ...
                options.tube_width_xy, x_center, y_center, z_center, options.tube_width_z);
        end
    end
elseif options.projector_type == 3
    if options.CT
        if exist('OCTAVE_VERSION','builtin') == 0
            [Summ, rhs] = projector_mexCT( Ny, Nx, Nz, dx, dz, by, bx, bz, z_det, x, y, dy, yy, xx , NSinos, NSlices, size_x, zmax, options.vaimennus, ...
                norm_input, SinD, koko, attenuation_correction, normalization_correction, randoms_correction,...
                options.scatter, scatter_input, options.global_correction_factor, lor_a_input, xy_index_input, z_index_input, NSinos, L_input, pseudot, det_per_ring, ...
                TOF, TOFSize, sigma_x, TOFCenter, int64(options.TOF_bins), dec, options.verbose, nCores, ...
                (use_raw_data), uint32(1), options.listmode, epps, uu, OSEM_apu, uint32(options.projector_type), no_norm, options.precompute_lor, tyyppi, ...
                x_center, y_center, z_center, bmin, bmax, Vmax, V, uint32(options.subsets), options.angles, uint32(options.xSize), ...
                options.dPitch, int64(numel(options.angles)));
        elseif exist('OCTAVE_VERSION','builtin') == 5
            [Summ, rhs] = projector_octCT( Ny, Nx, Nz, dx, dz, by, bx, bz, z_det, x, y, dy, yy, xx , NSinos, NSlices, size_x, zmax, options.vaimennus, ...
                norm_input, SinD, koko, attenuation_correction, normalization_correction, randoms_correction,...
                options.scatter, scatter_input, options.global_correction_factor, lor_a_input, xy_index_input, z_index_input, NSinos, L_input, pseudot, det_per_ring, ...
                TOF, TOFSize, sigma_x, TOFCenter, int64(options.TOF_bins), dec, options.verbose, nCores, ...
                (use_raw_data), uint32(1), options.listmode, epps, uu, OSEM_apu, uint32(options.projector_type), no_norm, options.precompute_lor, tyyppi, ...
                x_center, y_center, z_center, bmin, bmax, Vmax, V, uint32(options.subsets), options.angles, uint32(options.xSize), ...
                options.dPitch, int64(numel(options.angles)));
        end
    else
        if exist('OCTAVE_VERSION','builtin') == 0
            [Summ, rhs] = projector_mex( Ny, Nx, Nz, dx, dz, by, bx, bz, z_det, x, y, dy, yy, xx , NSinos, NSlices, size_x, zmax, options.vaimennus, ...
                norm_input, SinD, koko, attenuation_correction, normalization_correction, randoms_correction,...
                options.scatter, scatter_input, options.global_correction_factor, lor_a_input, xy_index_input, z_index_input, NSinos, L_input, pseudot, det_per_ring, ...
                TOF, TOFSize, sigma_x, TOFCenter, int64(options.TOF_bins), dec, options.verbose, nCores, ...
                (use_raw_data), uint32(1), options.listmode, epps, uu, OSEM_apu, uint32(options.projector_type), no_norm, options.precompute_lor, tyyppi, ...
                x_center, y_center, z_center, bmin, bmax, Vmax, V);
        elseif exist('OCTAVE_VERSION','builtin') == 5
            [Summ, rhs] = projector_oct( Ny, Nx, Nz, dx, dz, by, bx, bz, z_det, x, y, dy, yy, xx , NSinos, NSlices, size_x, zmax, options.vaimennus, ...
                norm_input, SinD, koko, attenuation_correction, normalization_correction, randoms_correction,...
                options.scatter, scatter_input, options.global_correction_factor, lor_a_input, xy_index_input, z_index_input, NSinos, L_input, pseudot, det_per_ring, ...
                TOF, TOFSize, sigma_x, TOFCenter, int64(options.TOF_bins), dec, options.verbose, nCores, ...
                (use_raw_data), uint32(1), options.listmode, epps, uu, OSEM_apu, uint32(options.projector_type), no_norm, options.precompute_lor, tyyppi, ...
                x_center, y_center, z_center, bmin, bmax, Vmax, V);
        end
    end
else
    error('Unsupported projector')
end