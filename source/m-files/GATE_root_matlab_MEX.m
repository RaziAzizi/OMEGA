function [raw_SinM, SinTrues, SinScatter, SinRandoms, SinD, C, SC, RA, coord, Dcoord, tIndex, trIndex, axIndex, DtrIndex, DaxIndex] = GATE_root_matlab_MEX(nimi, partitions, alku, loppu, detectors, blocks_per_ring, cryst_per_block, det_per_ring, linear_multip, source, Nt, obtain_trues, ...
                    store_scatter, store_randoms, scatter_components, randoms_correction, store_coordinates, transaxial_multip, cryst_per_block_z, rings, sinoSize, ...
                    TOF, verbose, nLayers, Ndist, Nang, ring_difference, span, segment_table, TOFSize, ndist_side, Sino, SinTrues, SinScatter, ...
                    SinRandoms, SinD, det_w_pseudo, pseudot, TOF_width, FWHM, dx, dy, dz, bx, by, bz, Nx, Ny, Nz, dualLayerSubmodule, useIndexBasedReconstruction)
%GATE_ROOT_MATLAB_MEX Computes the ROOT data load utilizing mexhost
%   In R2019a and up, a mex-file can be computed separate from MATLAB
%   preventing any possible library conflicts. This can be achieved by
%   using mexhost and feval.
% persistent mh
% if ~(isa(mh,'matlab.mex.MexHost') && isvalid(mh))
tic
mh = mexhost;
[raw_SinM, SinTrues, SinScatter, SinRandoms, SinD, C, SC, RA, tIndex, coord, Dcoord, trIndex, axIndex, DtrIndex, DaxIndex] = feval(mh, 'GATE_root_matlab', nimi,partitions, alku, loppu, detectors, blocks_per_ring, cryst_per_block, det_per_ring, linear_multip, source, Nt, obtain_trues, ...
    store_scatter, store_randoms, scatter_components, randoms_correction, store_coordinates, transaxial_multip, cryst_per_block_z, rings, sinoSize, ...
    TOF, verbose, nLayers, Ndist, Nang, ring_difference, span, segment_table, TOFSize, ndist_side, Sino, SinTrues, SinScatter, ...
    SinRandoms, SinD, det_w_pseudo, pseudot, TOF_width, FWHM, dx, dy, dz, bx, by, bz, Nx, Ny, Nz, dualLayerSubmodule,useIndexBasedReconstruction);
toc
% end
% if outputUint32
%     [L1, L2, tpoints, A, int_loc, Ltrues, Lscatter, Lrandoms, trues_index, Ldelay1, Ldelay2, int_loc_delay, tpoints_delay, randoms_index, scatter_index, ...
%         x1, x2, y1, y2, z1, z2, time, timeD, layer1, layer2, layerD1, layerD2] = ...
%         feval(mh, 'GATE_root_matlab', nimi,vali,alku,loppu, uint32(detectors), blocks_per_ring, cryst_per_block, det_per_ring, uint32(options.linear_multip), ...
%         source, time_intervals, options.obtain_trues, options.store_scatter, options.store_randoms, scatter_components, options.randoms_correction, store_coordinates, ...
%         transaxial_multip, cryst_per_block_z, rings, large_case, TOF, verbose, options.nLayers);
% else
%     [L1, L2, tpoints, A, int_loc, Ltrues, Lscatter, Lrandoms, trues_index, Ldelay1, Ldelay2, int_loc_delay, tpoints_delay, randoms_index, scatter_index, ...
%         x1, x2, y1, y2, z1, z2, time, timeD, layer1, layer2, layerD1, layerD2] = ...
%         feval(mh, 'GATE_root_matlab_uint16', nimi,vali,alku,loppu, uint32(detectors), blocks_per_ring, cryst_per_block, det_per_ring, uint32(options.linear_multip), ...
%         source, time_intervals, options.obtain_trues, options.store_scatter, options.store_randoms, scatter_components, options.randoms_correction, store_coordinates, ...
%         transaxial_multip, cryst_per_block_z, rings, large_case, TOF, verbose, options.nLayers);
% end
clear mh mex
end